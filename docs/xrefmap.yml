### YamlMime:XRefMap
sorted: true
references:
- uid: ConcurrentSharp
  name: ConcurrentSharp
  href: api/ConcurrentSharp.html
  commentId: N:ConcurrentSharp
  fullName: ConcurrentSharp
  nameWithType: ConcurrentSharp
- uid: ConcurrentSharp.AsyncEventHandle
  name: AsyncEventHandle
  href: api/ConcurrentSharp.AsyncEventHandle.html
  commentId: T:ConcurrentSharp.AsyncEventHandle
  fullName: ConcurrentSharp.AsyncEventHandle
  nameWithType: AsyncEventHandle
- uid: ConcurrentSharp.AsyncEventHandle.#ctor(EventWaitHandle)
  name: AsyncEventHandle(EventWaitHandle)
  href: api/ConcurrentSharp.AsyncEventHandle.-ctor.html#ConcurrentSharp_AsyncEventHandle__ctor_EventWaitHandle_
  commentId: M:ConcurrentSharp.AsyncEventHandle.#ctor(EventWaitHandle)
  fullName: ConcurrentSharp.AsyncEventHandle.AsyncEventHandle(EventWaitHandle)
  nameWithType: AsyncEventHandle.AsyncEventHandle(EventWaitHandle)
- uid: ConcurrentSharp.AsyncEventHandle.#ctor*
  name: AsyncEventHandle
  href: api/ConcurrentSharp.AsyncEventHandle.-ctor.html
  commentId: Overload:ConcurrentSharp.AsyncEventHandle.#ctor
  fullName: ConcurrentSharp.AsyncEventHandle.AsyncEventHandle
  nameWithType: AsyncEventHandle.AsyncEventHandle
- uid: ConcurrentSharp.AsyncLock
  name: AsyncLock
  href: api/ConcurrentSharp.AsyncLock.html
  commentId: T:ConcurrentSharp.AsyncLock
  fullName: ConcurrentSharp.AsyncLock
  nameWithType: AsyncLock
- uid: ConcurrentSharp.AsyncLock.#ctor
  name: AsyncLock()
  href: api/ConcurrentSharp.AsyncLock.-ctor.html#ConcurrentSharp_AsyncLock__ctor
  commentId: M:ConcurrentSharp.AsyncLock.#ctor
  fullName: ConcurrentSharp.AsyncLock.AsyncLock()
  nameWithType: AsyncLock.AsyncLock()
- uid: ConcurrentSharp.AsyncLock.#ctor*
  name: AsyncLock
  href: api/ConcurrentSharp.AsyncLock.-ctor.html
  commentId: Overload:ConcurrentSharp.AsyncLock.#ctor
  fullName: ConcurrentSharp.AsyncLock.AsyncLock
  nameWithType: AsyncLock.AsyncLock
- uid: ConcurrentSharp.AsyncLock.Lock
  name: Lock()
  href: api/ConcurrentSharp.AsyncLock.Lock.html#ConcurrentSharp_AsyncLock_Lock
  commentId: M:ConcurrentSharp.AsyncLock.Lock
  fullName: ConcurrentSharp.AsyncLock.Lock()
  nameWithType: AsyncLock.Lock()
- uid: ConcurrentSharp.AsyncLock.Lock(System.Threading.CancellationToken)
  name: Lock(CancellationToken)
  href: api/ConcurrentSharp.AsyncLock.Lock.html#ConcurrentSharp_AsyncLock_Lock_System_Threading_CancellationToken_
  commentId: M:ConcurrentSharp.AsyncLock.Lock(System.Threading.CancellationToken)
  fullName: ConcurrentSharp.AsyncLock.Lock(System.Threading.CancellationToken)
  nameWithType: AsyncLock.Lock(CancellationToken)
- uid: ConcurrentSharp.AsyncLock.Lock*
  name: Lock
  href: api/ConcurrentSharp.AsyncLock.Lock.html
  commentId: Overload:ConcurrentSharp.AsyncLock.Lock
  fullName: ConcurrentSharp.AsyncLock.Lock
  nameWithType: AsyncLock.Lock
- uid: ConcurrentSharp.AsyncLock.LockAsync
  name: LockAsync()
  href: api/ConcurrentSharp.AsyncLock.LockAsync.html#ConcurrentSharp_AsyncLock_LockAsync
  commentId: M:ConcurrentSharp.AsyncLock.LockAsync
  fullName: ConcurrentSharp.AsyncLock.LockAsync()
  nameWithType: AsyncLock.LockAsync()
- uid: ConcurrentSharp.AsyncLock.LockAsync(System.Threading.CancellationToken)
  name: LockAsync(CancellationToken)
  href: api/ConcurrentSharp.AsyncLock.LockAsync.html#ConcurrentSharp_AsyncLock_LockAsync_System_Threading_CancellationToken_
  commentId: M:ConcurrentSharp.AsyncLock.LockAsync(System.Threading.CancellationToken)
  fullName: ConcurrentSharp.AsyncLock.LockAsync(System.Threading.CancellationToken)
  nameWithType: AsyncLock.LockAsync(CancellationToken)
- uid: ConcurrentSharp.AsyncLock.LockAsync*
  name: LockAsync
  href: api/ConcurrentSharp.AsyncLock.LockAsync.html
  commentId: Overload:ConcurrentSharp.AsyncLock.LockAsync
  fullName: ConcurrentSharp.AsyncLock.LockAsync
  nameWithType: AsyncLock.LockAsync
- uid: ConcurrentSharp.AsyncSemaphore
  name: AsyncSemaphore
  href: api/ConcurrentSharp.AsyncSemaphore.html
  commentId: T:ConcurrentSharp.AsyncSemaphore
  fullName: ConcurrentSharp.AsyncSemaphore
  nameWithType: AsyncSemaphore
- uid: ConcurrentSharp.AsyncSemaphore.#ctor(System.Int32,System.Int32)
  name: AsyncSemaphore(Int32, Int32)
  href: api/ConcurrentSharp.AsyncSemaphore.-ctor.html#ConcurrentSharp_AsyncSemaphore__ctor_System_Int32_System_Int32_
  commentId: M:ConcurrentSharp.AsyncSemaphore.#ctor(System.Int32,System.Int32)
  fullName: ConcurrentSharp.AsyncSemaphore.AsyncSemaphore(System.Int32, System.Int32)
  nameWithType: AsyncSemaphore.AsyncSemaphore(Int32, Int32)
- uid: ConcurrentSharp.AsyncSemaphore.#ctor(System.Threading.Semaphore)
  name: AsyncSemaphore(Semaphore)
  href: api/ConcurrentSharp.AsyncSemaphore.-ctor.html#ConcurrentSharp_AsyncSemaphore__ctor_System_Threading_Semaphore_
  commentId: M:ConcurrentSharp.AsyncSemaphore.#ctor(System.Threading.Semaphore)
  fullName: ConcurrentSharp.AsyncSemaphore.AsyncSemaphore(System.Threading.Semaphore)
  nameWithType: AsyncSemaphore.AsyncSemaphore(Semaphore)
- uid: ConcurrentSharp.AsyncSemaphore.#ctor*
  name: AsyncSemaphore
  href: api/ConcurrentSharp.AsyncSemaphore.-ctor.html
  commentId: Overload:ConcurrentSharp.AsyncSemaphore.#ctor
  fullName: ConcurrentSharp.AsyncSemaphore.AsyncSemaphore
  nameWithType: AsyncSemaphore.AsyncSemaphore
- uid: ConcurrentSharp.AsyncSemaphore.Wait
  name: Wait()
  href: api/ConcurrentSharp.AsyncSemaphore.Wait.html#ConcurrentSharp_AsyncSemaphore_Wait
  commentId: M:ConcurrentSharp.AsyncSemaphore.Wait
  fullName: ConcurrentSharp.AsyncSemaphore.Wait()
  nameWithType: AsyncSemaphore.Wait()
- uid: ConcurrentSharp.AsyncSemaphore.Wait(CancellationToken)
  name: Wait(CancellationToken)
  href: api/ConcurrentSharp.AsyncSemaphore.Wait.html#ConcurrentSharp_AsyncSemaphore_Wait_CancellationToken_
  commentId: M:ConcurrentSharp.AsyncSemaphore.Wait(CancellationToken)
  fullName: ConcurrentSharp.AsyncSemaphore.Wait(CancellationToken)
  nameWithType: AsyncSemaphore.Wait(CancellationToken)
- uid: ConcurrentSharp.AsyncSemaphore.Wait*
  name: Wait
  href: api/ConcurrentSharp.AsyncSemaphore.Wait.html
  commentId: Overload:ConcurrentSharp.AsyncSemaphore.Wait
  fullName: ConcurrentSharp.AsyncSemaphore.Wait
  nameWithType: AsyncSemaphore.Wait
- uid: ConcurrentSharp.AsyncSemaphore.WaitAsync
  name: WaitAsync()
  href: api/ConcurrentSharp.AsyncSemaphore.WaitAsync.html#ConcurrentSharp_AsyncSemaphore_WaitAsync
  commentId: M:ConcurrentSharp.AsyncSemaphore.WaitAsync
  fullName: ConcurrentSharp.AsyncSemaphore.WaitAsync()
  nameWithType: AsyncSemaphore.WaitAsync()
- uid: ConcurrentSharp.AsyncSemaphore.WaitAsync(CancellationToken)
  name: WaitAsync(CancellationToken)
  href: api/ConcurrentSharp.AsyncSemaphore.WaitAsync.html#ConcurrentSharp_AsyncSemaphore_WaitAsync_CancellationToken_
  commentId: M:ConcurrentSharp.AsyncSemaphore.WaitAsync(CancellationToken)
  fullName: ConcurrentSharp.AsyncSemaphore.WaitAsync(CancellationToken)
  nameWithType: AsyncSemaphore.WaitAsync(CancellationToken)
- uid: ConcurrentSharp.AsyncSemaphore.WaitAsync*
  name: WaitAsync
  href: api/ConcurrentSharp.AsyncSemaphore.WaitAsync.html
  commentId: Overload:ConcurrentSharp.AsyncSemaphore.WaitAsync
  fullName: ConcurrentSharp.AsyncSemaphore.WaitAsync
  nameWithType: AsyncSemaphore.WaitAsync
- uid: ConcurrentSharp.BlockingCollectionProcessor`1
  name: BlockingCollectionProcessor<T>
  href: api/ConcurrentSharp.BlockingCollectionProcessor-1.html
  commentId: T:ConcurrentSharp.BlockingCollectionProcessor`1
  name.vb: BlockingCollectionProcessor(Of T)
  fullName: ConcurrentSharp.BlockingCollectionProcessor<T>
  fullName.vb: ConcurrentSharp.BlockingCollectionProcessor(Of T)
  nameWithType: BlockingCollectionProcessor<T>
  nameWithType.vb: BlockingCollectionProcessor(Of T)
- uid: ConcurrentSharp.BlockingCollectionProcessor`1.#ctor(BlockingCollection{`0},System.Int32,Action{`0},ConcurrentSharp.ExpectedThreadLifetime)
  name: BlockingCollectionProcessor(BlockingCollection<T>, Int32, Action<T>, ExpectedThreadLifetime)
  href: api/ConcurrentSharp.BlockingCollectionProcessor-1.-ctor.html#ConcurrentSharp_BlockingCollectionProcessor_1__ctor_BlockingCollection__0__System_Int32_Action__0__ConcurrentSharp_ExpectedThreadLifetime_
  commentId: M:ConcurrentSharp.BlockingCollectionProcessor`1.#ctor(BlockingCollection{`0},System.Int32,Action{`0},ConcurrentSharp.ExpectedThreadLifetime)
  name.vb: BlockingCollectionProcessor(BlockingCollection(Of T), Int32, Action(Of T), ExpectedThreadLifetime)
  fullName: ConcurrentSharp.BlockingCollectionProcessor<T>.BlockingCollectionProcessor(BlockingCollection<T>, System.Int32, Action<T>, ConcurrentSharp.ExpectedThreadLifetime)
  fullName.vb: ConcurrentSharp.BlockingCollectionProcessor(Of T).BlockingCollectionProcessor(BlockingCollection(Of T), System.Int32, Action(Of T), ConcurrentSharp.ExpectedThreadLifetime)
  nameWithType: BlockingCollectionProcessor<T>.BlockingCollectionProcessor(BlockingCollection<T>, Int32, Action<T>, ExpectedThreadLifetime)
  nameWithType.vb: BlockingCollectionProcessor(Of T).BlockingCollectionProcessor(BlockingCollection(Of T), Int32, Action(Of T), ExpectedThreadLifetime)
- uid: ConcurrentSharp.BlockingCollectionProcessor`1.#ctor*
  name: BlockingCollectionProcessor
  href: api/ConcurrentSharp.BlockingCollectionProcessor-1.-ctor.html
  commentId: Overload:ConcurrentSharp.BlockingCollectionProcessor`1.#ctor
  fullName: ConcurrentSharp.BlockingCollectionProcessor<T>.BlockingCollectionProcessor
  fullName.vb: ConcurrentSharp.BlockingCollectionProcessor(Of T).BlockingCollectionProcessor
  nameWithType: BlockingCollectionProcessor<T>.BlockingCollectionProcessor
  nameWithType.vb: BlockingCollectionProcessor(Of T).BlockingCollectionProcessor
- uid: ConcurrentSharp.BlockingCollectionProcessor`1.Dispose
  name: Dispose()
  href: api/ConcurrentSharp.BlockingCollectionProcessor-1.Dispose.html#ConcurrentSharp_BlockingCollectionProcessor_1_Dispose
  commentId: M:ConcurrentSharp.BlockingCollectionProcessor`1.Dispose
  fullName: ConcurrentSharp.BlockingCollectionProcessor<T>.Dispose()
  fullName.vb: ConcurrentSharp.BlockingCollectionProcessor(Of T).Dispose()
  nameWithType: BlockingCollectionProcessor<T>.Dispose()
  nameWithType.vb: BlockingCollectionProcessor(Of T).Dispose()
- uid: ConcurrentSharp.BlockingCollectionProcessor`1.Dispose*
  name: Dispose
  href: api/ConcurrentSharp.BlockingCollectionProcessor-1.Dispose.html
  commentId: Overload:ConcurrentSharp.BlockingCollectionProcessor`1.Dispose
  fullName: ConcurrentSharp.BlockingCollectionProcessor<T>.Dispose
  fullName.vb: ConcurrentSharp.BlockingCollectionProcessor(Of T).Dispose
  nameWithType: BlockingCollectionProcessor<T>.Dispose
  nameWithType.vb: BlockingCollectionProcessor(Of T).Dispose
- uid: ConcurrentSharp.BlockingCollectionProcessor`1.ProcessItems(IEnumerable{`0},System.Int32,Action{`0},ConcurrentSharp.ExpectedThreadLifetime)
  name: ProcessItems(IEnumerable<T>, Int32, Action<T>, ExpectedThreadLifetime)
  href: api/ConcurrentSharp.BlockingCollectionProcessor-1.ProcessItems.html#ConcurrentSharp_BlockingCollectionProcessor_1_ProcessItems_IEnumerable__0__System_Int32_Action__0__ConcurrentSharp_ExpectedThreadLifetime_
  commentId: M:ConcurrentSharp.BlockingCollectionProcessor`1.ProcessItems(IEnumerable{`0},System.Int32,Action{`0},ConcurrentSharp.ExpectedThreadLifetime)
  name.vb: ProcessItems(IEnumerable(Of T), Int32, Action(Of T), ExpectedThreadLifetime)
  fullName: ConcurrentSharp.BlockingCollectionProcessor<T>.ProcessItems(IEnumerable<T>, System.Int32, Action<T>, ConcurrentSharp.ExpectedThreadLifetime)
  fullName.vb: ConcurrentSharp.BlockingCollectionProcessor(Of T).ProcessItems(IEnumerable(Of T), System.Int32, Action(Of T), ConcurrentSharp.ExpectedThreadLifetime)
  nameWithType: BlockingCollectionProcessor<T>.ProcessItems(IEnumerable<T>, Int32, Action<T>, ExpectedThreadLifetime)
  nameWithType.vb: BlockingCollectionProcessor(Of T).ProcessItems(IEnumerable(Of T), Int32, Action(Of T), ExpectedThreadLifetime)
- uid: ConcurrentSharp.BlockingCollectionProcessor`1.ProcessItems*
  name: ProcessItems
  href: api/ConcurrentSharp.BlockingCollectionProcessor-1.ProcessItems.html
  commentId: Overload:ConcurrentSharp.BlockingCollectionProcessor`1.ProcessItems
  fullName: ConcurrentSharp.BlockingCollectionProcessor<T>.ProcessItems
  fullName.vb: ConcurrentSharp.BlockingCollectionProcessor(Of T).ProcessItems
  nameWithType: BlockingCollectionProcessor<T>.ProcessItems
  nameWithType.vb: BlockingCollectionProcessor(Of T).ProcessItems
- uid: ConcurrentSharp.BlockingCollectionProcessor`1.WaitForCompletion
  name: WaitForCompletion()
  href: api/ConcurrentSharp.BlockingCollectionProcessor-1.WaitForCompletion.html#ConcurrentSharp_BlockingCollectionProcessor_1_WaitForCompletion
  commentId: M:ConcurrentSharp.BlockingCollectionProcessor`1.WaitForCompletion
  fullName: ConcurrentSharp.BlockingCollectionProcessor<T>.WaitForCompletion()
  fullName.vb: ConcurrentSharp.BlockingCollectionProcessor(Of T).WaitForCompletion()
  nameWithType: BlockingCollectionProcessor<T>.WaitForCompletion()
  nameWithType.vb: BlockingCollectionProcessor(Of T).WaitForCompletion()
- uid: ConcurrentSharp.BlockingCollectionProcessor`1.WaitForCompletion(TimeSpan)
  name: WaitForCompletion(TimeSpan)
  href: api/ConcurrentSharp.BlockingCollectionProcessor-1.WaitForCompletion.html#ConcurrentSharp_BlockingCollectionProcessor_1_WaitForCompletion_TimeSpan_
  commentId: M:ConcurrentSharp.BlockingCollectionProcessor`1.WaitForCompletion(TimeSpan)
  fullName: ConcurrentSharp.BlockingCollectionProcessor<T>.WaitForCompletion(TimeSpan)
  fullName.vb: ConcurrentSharp.BlockingCollectionProcessor(Of T).WaitForCompletion(TimeSpan)
  nameWithType: BlockingCollectionProcessor<T>.WaitForCompletion(TimeSpan)
  nameWithType.vb: BlockingCollectionProcessor(Of T).WaitForCompletion(TimeSpan)
- uid: ConcurrentSharp.BlockingCollectionProcessor`1.WaitForCompletion*
  name: WaitForCompletion
  href: api/ConcurrentSharp.BlockingCollectionProcessor-1.WaitForCompletion.html
  commentId: Overload:ConcurrentSharp.BlockingCollectionProcessor`1.WaitForCompletion
  fullName: ConcurrentSharp.BlockingCollectionProcessor<T>.WaitForCompletion
  fullName.vb: ConcurrentSharp.BlockingCollectionProcessor(Of T).WaitForCompletion
  nameWithType: BlockingCollectionProcessor<T>.WaitForCompletion
  nameWithType.vb: BlockingCollectionProcessor(Of T).WaitForCompletion
- uid: ConcurrentSharp.CancellableTaskSource`1
  name: CancellableTaskSource<T>
  href: api/ConcurrentSharp.CancellableTaskSource-1.html
  commentId: T:ConcurrentSharp.CancellableTaskSource`1
  name.vb: CancellableTaskSource(Of T)
  fullName: ConcurrentSharp.CancellableTaskSource<T>
  fullName.vb: ConcurrentSharp.CancellableTaskSource(Of T)
  nameWithType: CancellableTaskSource<T>
  nameWithType.vb: CancellableTaskSource(Of T)
- uid: ConcurrentSharp.CancellableTaskSource`1.#ctor
  name: CancellableTaskSource()
  href: api/ConcurrentSharp.CancellableTaskSource-1.-ctor.html#ConcurrentSharp_CancellableTaskSource_1__ctor
  commentId: M:ConcurrentSharp.CancellableTaskSource`1.#ctor
  fullName: ConcurrentSharp.CancellableTaskSource<T>.CancellableTaskSource()
  fullName.vb: ConcurrentSharp.CancellableTaskSource(Of T).CancellableTaskSource()
  nameWithType: CancellableTaskSource<T>.CancellableTaskSource()
  nameWithType.vb: CancellableTaskSource(Of T).CancellableTaskSource()
- uid: ConcurrentSharp.CancellableTaskSource`1.#ctor(TaskCompletionSource{`0})
  name: CancellableTaskSource(TaskCompletionSource<T>)
  href: api/ConcurrentSharp.CancellableTaskSource-1.-ctor.html#ConcurrentSharp_CancellableTaskSource_1__ctor_TaskCompletionSource__0__
  commentId: M:ConcurrentSharp.CancellableTaskSource`1.#ctor(TaskCompletionSource{`0})
  name.vb: CancellableTaskSource(TaskCompletionSource(Of T))
  fullName: ConcurrentSharp.CancellableTaskSource<T>.CancellableTaskSource(TaskCompletionSource<T>)
  fullName.vb: ConcurrentSharp.CancellableTaskSource(Of T).CancellableTaskSource(TaskCompletionSource(Of T))
  nameWithType: CancellableTaskSource<T>.CancellableTaskSource(TaskCompletionSource<T>)
  nameWithType.vb: CancellableTaskSource(Of T).CancellableTaskSource(TaskCompletionSource(Of T))
- uid: ConcurrentSharp.CancellableTaskSource`1.#ctor(TaskCompletionSource{`0},System.Threading.CancellationToken)
  name: CancellableTaskSource(TaskCompletionSource<T>, CancellationToken)
  href: api/ConcurrentSharp.CancellableTaskSource-1.-ctor.html#ConcurrentSharp_CancellableTaskSource_1__ctor_TaskCompletionSource__0__System_Threading_CancellationToken_
  commentId: M:ConcurrentSharp.CancellableTaskSource`1.#ctor(TaskCompletionSource{`0},System.Threading.CancellationToken)
  name.vb: CancellableTaskSource(TaskCompletionSource(Of T), CancellationToken)
  fullName: ConcurrentSharp.CancellableTaskSource<T>.CancellableTaskSource(TaskCompletionSource<T>, System.Threading.CancellationToken)
  fullName.vb: ConcurrentSharp.CancellableTaskSource(Of T).CancellableTaskSource(TaskCompletionSource(Of T), System.Threading.CancellationToken)
  nameWithType: CancellableTaskSource<T>.CancellableTaskSource(TaskCompletionSource<T>, CancellationToken)
  nameWithType.vb: CancellableTaskSource(Of T).CancellableTaskSource(TaskCompletionSource(Of T), CancellationToken)
- uid: ConcurrentSharp.CancellableTaskSource`1.#ctor*
  name: CancellableTaskSource
  href: api/ConcurrentSharp.CancellableTaskSource-1.-ctor.html
  commentId: Overload:ConcurrentSharp.CancellableTaskSource`1.#ctor
  fullName: ConcurrentSharp.CancellableTaskSource<T>.CancellableTaskSource
  fullName.vb: ConcurrentSharp.CancellableTaskSource(Of T).CancellableTaskSource
  nameWithType: CancellableTaskSource<T>.CancellableTaskSource
  nameWithType.vb: CancellableTaskSource(Of T).CancellableTaskSource
- uid: ConcurrentSharp.CancellableTaskSource`1.Cancel
  name: Cancel()
  href: api/ConcurrentSharp.CancellableTaskSource-1.Cancel.html#ConcurrentSharp_CancellableTaskSource_1_Cancel
  commentId: M:ConcurrentSharp.CancellableTaskSource`1.Cancel
  fullName: ConcurrentSharp.CancellableTaskSource<T>.Cancel()
  fullName.vb: ConcurrentSharp.CancellableTaskSource(Of T).Cancel()
  nameWithType: CancellableTaskSource<T>.Cancel()
  nameWithType.vb: CancellableTaskSource(Of T).Cancel()
- uid: ConcurrentSharp.CancellableTaskSource`1.Cancel*
  name: Cancel
  href: api/ConcurrentSharp.CancellableTaskSource-1.Cancel.html
  commentId: Overload:ConcurrentSharp.CancellableTaskSource`1.Cancel
  fullName: ConcurrentSharp.CancellableTaskSource<T>.Cancel
  fullName.vb: ConcurrentSharp.CancellableTaskSource(Of T).Cancel
  nameWithType: CancellableTaskSource<T>.Cancel
  nameWithType.vb: CancellableTaskSource(Of T).Cancel
- uid: ConcurrentSharp.CancellableTaskSource`1.CancellationToken
  name: CancellationToken
  href: api/ConcurrentSharp.CancellableTaskSource-1.CancellationToken.html#ConcurrentSharp_CancellableTaskSource_1_CancellationToken
  commentId: P:ConcurrentSharp.CancellableTaskSource`1.CancellationToken
  fullName: ConcurrentSharp.CancellableTaskSource<T>.CancellationToken
  fullName.vb: ConcurrentSharp.CancellableTaskSource(Of T).CancellationToken
  nameWithType: CancellableTaskSource<T>.CancellationToken
  nameWithType.vb: CancellableTaskSource(Of T).CancellationToken
- uid: ConcurrentSharp.CancellableTaskSource`1.CancellationToken*
  name: CancellationToken
  href: api/ConcurrentSharp.CancellableTaskSource-1.CancellationToken.html
  commentId: Overload:ConcurrentSharp.CancellableTaskSource`1.CancellationToken
  fullName: ConcurrentSharp.CancellableTaskSource<T>.CancellationToken
  fullName.vb: ConcurrentSharp.CancellableTaskSource(Of T).CancellationToken
  nameWithType: CancellableTaskSource<T>.CancellationToken
  nameWithType.vb: CancellableTaskSource(Of T).CancellationToken
- uid: ConcurrentSharp.CancellableTaskSource`1.Dispose
  name: Dispose()
  href: api/ConcurrentSharp.CancellableTaskSource-1.Dispose.html#ConcurrentSharp_CancellableTaskSource_1_Dispose
  commentId: M:ConcurrentSharp.CancellableTaskSource`1.Dispose
  fullName: ConcurrentSharp.CancellableTaskSource<T>.Dispose()
  fullName.vb: ConcurrentSharp.CancellableTaskSource(Of T).Dispose()
  nameWithType: CancellableTaskSource<T>.Dispose()
  nameWithType.vb: CancellableTaskSource(Of T).Dispose()
- uid: ConcurrentSharp.CancellableTaskSource`1.Dispose*
  name: Dispose
  href: api/ConcurrentSharp.CancellableTaskSource-1.Dispose.html
  commentId: Overload:ConcurrentSharp.CancellableTaskSource`1.Dispose
  fullName: ConcurrentSharp.CancellableTaskSource<T>.Dispose
  fullName.vb: ConcurrentSharp.CancellableTaskSource(Of T).Dispose
  nameWithType: CancellableTaskSource<T>.Dispose
  nameWithType.vb: CancellableTaskSource(Of T).Dispose
- uid: ConcurrentSharp.CancellableTaskSource`1.TaskCompletionSource
  name: TaskCompletionSource
  href: api/ConcurrentSharp.CancellableTaskSource-1.TaskCompletionSource.html#ConcurrentSharp_CancellableTaskSource_1_TaskCompletionSource
  commentId: P:ConcurrentSharp.CancellableTaskSource`1.TaskCompletionSource
  fullName: ConcurrentSharp.CancellableTaskSource<T>.TaskCompletionSource
  fullName.vb: ConcurrentSharp.CancellableTaskSource(Of T).TaskCompletionSource
  nameWithType: CancellableTaskSource<T>.TaskCompletionSource
  nameWithType.vb: CancellableTaskSource(Of T).TaskCompletionSource
- uid: ConcurrentSharp.CancellableTaskSource`1.TaskCompletionSource*
  name: TaskCompletionSource
  href: api/ConcurrentSharp.CancellableTaskSource-1.TaskCompletionSource.html
  commentId: Overload:ConcurrentSharp.CancellableTaskSource`1.TaskCompletionSource
  fullName: ConcurrentSharp.CancellableTaskSource<T>.TaskCompletionSource
  fullName.vb: ConcurrentSharp.CancellableTaskSource(Of T).TaskCompletionSource
  nameWithType: CancellableTaskSource<T>.TaskCompletionSource
  nameWithType.vb: CancellableTaskSource(Of T).TaskCompletionSource
- uid: ConcurrentSharp.Counter
  name: Counter
  href: api/ConcurrentSharp.Counter.html
  commentId: T:ConcurrentSharp.Counter
  fullName: ConcurrentSharp.Counter
  nameWithType: Counter
- uid: ConcurrentSharp.Counter.#ctor
  name: Counter()
  href: api/ConcurrentSharp.Counter.-ctor.html#ConcurrentSharp_Counter__ctor
  commentId: M:ConcurrentSharp.Counter.#ctor
  fullName: ConcurrentSharp.Counter.Counter()
  nameWithType: Counter.Counter()
- uid: ConcurrentSharp.Counter.#ctor(System.Int64)
  name: Counter(Int64)
  href: api/ConcurrentSharp.Counter.-ctor.html#ConcurrentSharp_Counter__ctor_System_Int64_
  commentId: M:ConcurrentSharp.Counter.#ctor(System.Int64)
  fullName: ConcurrentSharp.Counter.Counter(System.Int64)
  nameWithType: Counter.Counter(Int64)
- uid: ConcurrentSharp.Counter.#ctor*
  name: Counter
  href: api/ConcurrentSharp.Counter.-ctor.html
  commentId: Overload:ConcurrentSharp.Counter.#ctor
  fullName: ConcurrentSharp.Counter.Counter
  nameWithType: Counter.Counter
- uid: ConcurrentSharp.Counter.Decrement
  name: Decrement()
  href: api/ConcurrentSharp.Counter.Decrement.html#ConcurrentSharp_Counter_Decrement
  commentId: M:ConcurrentSharp.Counter.Decrement
  fullName: ConcurrentSharp.Counter.Decrement()
  nameWithType: Counter.Decrement()
- uid: ConcurrentSharp.Counter.Decrement(System.Int64)
  name: Decrement(Int64)
  href: api/ConcurrentSharp.Counter.Decrement.html#ConcurrentSharp_Counter_Decrement_System_Int64_
  commentId: M:ConcurrentSharp.Counter.Decrement(System.Int64)
  fullName: ConcurrentSharp.Counter.Decrement(System.Int64)
  nameWithType: Counter.Decrement(Int64)
- uid: ConcurrentSharp.Counter.Decrement*
  name: Decrement
  href: api/ConcurrentSharp.Counter.Decrement.html
  commentId: Overload:ConcurrentSharp.Counter.Decrement
  fullName: ConcurrentSharp.Counter.Decrement
  nameWithType: Counter.Decrement
- uid: ConcurrentSharp.Counter.Increment
  name: Increment()
  href: api/ConcurrentSharp.Counter.Increment.html#ConcurrentSharp_Counter_Increment
  commentId: M:ConcurrentSharp.Counter.Increment
  fullName: ConcurrentSharp.Counter.Increment()
  nameWithType: Counter.Increment()
- uid: ConcurrentSharp.Counter.Increment(System.Int64)
  name: Increment(Int64)
  href: api/ConcurrentSharp.Counter.Increment.html#ConcurrentSharp_Counter_Increment_System_Int64_
  commentId: M:ConcurrentSharp.Counter.Increment(System.Int64)
  fullName: ConcurrentSharp.Counter.Increment(System.Int64)
  nameWithType: Counter.Increment(Int64)
- uid: ConcurrentSharp.Counter.Increment*
  name: Increment
  href: api/ConcurrentSharp.Counter.Increment.html
  commentId: Overload:ConcurrentSharp.Counter.Increment
  fullName: ConcurrentSharp.Counter.Increment
  nameWithType: Counter.Increment
- uid: ConcurrentSharp.Counter.op_Implicit(ConcurrentSharp.Counter)~System.Int64
  name: Implicit(Counter to Int64)
  href: api/ConcurrentSharp.Counter.op_Implicit.html#ConcurrentSharp_Counter_op_Implicit_ConcurrentSharp_Counter__System_Int64
  commentId: M:ConcurrentSharp.Counter.op_Implicit(ConcurrentSharp.Counter)~System.Int64
  name.vb: Widening(Counter to Int64)
  fullName: ConcurrentSharp.Counter.Implicit(ConcurrentSharp.Counter to System.Int64)
  fullName.vb: ConcurrentSharp.Counter.Widening(ConcurrentSharp.Counter to System.Int64)
  nameWithType: Counter.Implicit(Counter to Int64)
  nameWithType.vb: Counter.Widening(Counter to Int64)
- uid: ConcurrentSharp.Counter.op_Implicit*
  name: Implicit
  href: api/ConcurrentSharp.Counter.op_Implicit.html
  commentId: Overload:ConcurrentSharp.Counter.op_Implicit
  name.vb: Widening
  fullName: ConcurrentSharp.Counter.Implicit
  fullName.vb: ConcurrentSharp.Counter.Widening
  nameWithType: Counter.Implicit
  nameWithType.vb: Counter.Widening
- uid: ConcurrentSharp.Counter.Reset
  name: Reset()
  href: api/ConcurrentSharp.Counter.Reset.html#ConcurrentSharp_Counter_Reset
  commentId: M:ConcurrentSharp.Counter.Reset
  fullName: ConcurrentSharp.Counter.Reset()
  nameWithType: Counter.Reset()
- uid: ConcurrentSharp.Counter.Reset*
  name: Reset
  href: api/ConcurrentSharp.Counter.Reset.html
  commentId: Overload:ConcurrentSharp.Counter.Reset
  fullName: ConcurrentSharp.Counter.Reset
  nameWithType: Counter.Reset
- uid: ConcurrentSharp.Counter.ToInt64
  name: ToInt64()
  href: api/ConcurrentSharp.Counter.ToInt64.html#ConcurrentSharp_Counter_ToInt64
  commentId: M:ConcurrentSharp.Counter.ToInt64
  fullName: ConcurrentSharp.Counter.ToInt64()
  nameWithType: Counter.ToInt64()
- uid: ConcurrentSharp.Counter.ToInt64*
  name: ToInt64
  href: api/ConcurrentSharp.Counter.ToInt64.html
  commentId: Overload:ConcurrentSharp.Counter.ToInt64
  fullName: ConcurrentSharp.Counter.ToInt64
  nameWithType: Counter.ToInt64
- uid: ConcurrentSharp.ExpectedThreadLifetime
  name: ExpectedThreadLifetime
  href: api/ConcurrentSharp.ExpectedThreadLifetime.html
  commentId: T:ConcurrentSharp.ExpectedThreadLifetime
  fullName: ConcurrentSharp.ExpectedThreadLifetime
  nameWithType: ExpectedThreadLifetime
- uid: ConcurrentSharp.ExpectedThreadLifetime.Long
  name: Long
  href: api/ConcurrentSharp.ExpectedThreadLifetime.Long.html#ConcurrentSharp_ExpectedThreadLifetime_Long
  commentId: F:ConcurrentSharp.ExpectedThreadLifetime.Long
  fullName: ConcurrentSharp.ExpectedThreadLifetime.Long
  nameWithType: ExpectedThreadLifetime.Long
- uid: ConcurrentSharp.ExpectedThreadLifetime.Short
  name: Short
  href: api/ConcurrentSharp.ExpectedThreadLifetime.Short.html#ConcurrentSharp_ExpectedThreadLifetime_Short
  commentId: F:ConcurrentSharp.ExpectedThreadLifetime.Short
  fullName: ConcurrentSharp.ExpectedThreadLifetime.Short
  nameWithType: ExpectedThreadLifetime.Short
- uid: ConcurrentSharp.TaskExtensions
  name: TaskExtensions
  href: api/ConcurrentSharp.TaskExtensions.html
  commentId: T:ConcurrentSharp.TaskExtensions
  fullName: ConcurrentSharp.TaskExtensions
  nameWithType: TaskExtensions
- uid: ConcurrentSharp.TaskExtensions.Ignore(Task)
  name: Ignore(Task)
  href: api/ConcurrentSharp.TaskExtensions.Ignore.html#ConcurrentSharp_TaskExtensions_Ignore_Task_
  commentId: M:ConcurrentSharp.TaskExtensions.Ignore(Task)
  fullName: ConcurrentSharp.TaskExtensions.Ignore(Task)
  nameWithType: TaskExtensions.Ignore(Task)
- uid: ConcurrentSharp.TaskExtensions.Ignore*
  name: Ignore
  href: api/ConcurrentSharp.TaskExtensions.Ignore.html
  commentId: Overload:ConcurrentSharp.TaskExtensions.Ignore
  fullName: ConcurrentSharp.TaskExtensions.Ignore
  nameWithType: TaskExtensions.Ignore
- uid: ConcurrentSharp.TaskExtensions.TimeoutAfter(Task,System.Int32)
  name: TimeoutAfter(Task, Int32)
  href: api/ConcurrentSharp.TaskExtensions.TimeoutAfter.html#ConcurrentSharp_TaskExtensions_TimeoutAfter_Task_System_Int32_
  commentId: M:ConcurrentSharp.TaskExtensions.TimeoutAfter(Task,System.Int32)
  fullName: ConcurrentSharp.TaskExtensions.TimeoutAfter(Task, System.Int32)
  nameWithType: TaskExtensions.TimeoutAfter(Task, Int32)
- uid: ConcurrentSharp.TaskExtensions.TimeoutAfter(Task,System.Int32,CancellationTokenSource)
  name: TimeoutAfter(Task, Int32, CancellationTokenSource)
  href: api/ConcurrentSharp.TaskExtensions.TimeoutAfter.html#ConcurrentSharp_TaskExtensions_TimeoutAfter_Task_System_Int32_CancellationTokenSource_
  commentId: M:ConcurrentSharp.TaskExtensions.TimeoutAfter(Task,System.Int32,CancellationTokenSource)
  fullName: ConcurrentSharp.TaskExtensions.TimeoutAfter(Task, System.Int32, CancellationTokenSource)
  nameWithType: TaskExtensions.TimeoutAfter(Task, Int32, CancellationTokenSource)
- uid: ConcurrentSharp.TaskExtensions.TimeoutAfter(Task,TimeSpan)
  name: TimeoutAfter(Task, TimeSpan)
  href: api/ConcurrentSharp.TaskExtensions.TimeoutAfter.html#ConcurrentSharp_TaskExtensions_TimeoutAfter_Task_TimeSpan_
  commentId: M:ConcurrentSharp.TaskExtensions.TimeoutAfter(Task,TimeSpan)
  fullName: ConcurrentSharp.TaskExtensions.TimeoutAfter(Task, TimeSpan)
  nameWithType: TaskExtensions.TimeoutAfter(Task, TimeSpan)
- uid: ConcurrentSharp.TaskExtensions.TimeoutAfter(Task,TimeSpan,CancellationTokenSource)
  name: TimeoutAfter(Task, TimeSpan, CancellationTokenSource)
  href: api/ConcurrentSharp.TaskExtensions.TimeoutAfter.html#ConcurrentSharp_TaskExtensions_TimeoutAfter_Task_TimeSpan_CancellationTokenSource_
  commentId: M:ConcurrentSharp.TaskExtensions.TimeoutAfter(Task,TimeSpan,CancellationTokenSource)
  fullName: ConcurrentSharp.TaskExtensions.TimeoutAfter(Task, TimeSpan, CancellationTokenSource)
  nameWithType: TaskExtensions.TimeoutAfter(Task, TimeSpan, CancellationTokenSource)
- uid: ConcurrentSharp.TaskExtensions.TimeoutAfter*
  name: TimeoutAfter
  href: api/ConcurrentSharp.TaskExtensions.TimeoutAfter.html
  commentId: Overload:ConcurrentSharp.TaskExtensions.TimeoutAfter
  fullName: ConcurrentSharp.TaskExtensions.TimeoutAfter
  nameWithType: TaskExtensions.TimeoutAfter
- uid: ConcurrentSharp.TaskExtensions.TimeoutAfter``1(Task{``0},System.Int32)
  name: TimeoutAfter<T>(Task<T>, Int32)
  href: api/ConcurrentSharp.TaskExtensions.TimeoutAfter.html#ConcurrentSharp_TaskExtensions_TimeoutAfter__1_Task___0__System_Int32_
  commentId: M:ConcurrentSharp.TaskExtensions.TimeoutAfter``1(Task{``0},System.Int32)
  name.vb: TimeoutAfter(Of T)(Task(Of T), Int32)
  fullName: ConcurrentSharp.TaskExtensions.TimeoutAfter<T>(Task<T>, System.Int32)
  fullName.vb: ConcurrentSharp.TaskExtensions.TimeoutAfter(Of T)(Task(Of T), System.Int32)
  nameWithType: TaskExtensions.TimeoutAfter<T>(Task<T>, Int32)
  nameWithType.vb: TaskExtensions.TimeoutAfter(Of T)(Task(Of T), Int32)
- uid: ConcurrentSharp.TaskExtensions.TimeoutAfter``1(Task{``0},System.Int32,CancellationTokenSource)
  name: TimeoutAfter<T>(Task<T>, Int32, CancellationTokenSource)
  href: api/ConcurrentSharp.TaskExtensions.TimeoutAfter.html#ConcurrentSharp_TaskExtensions_TimeoutAfter__1_Task___0__System_Int32_CancellationTokenSource_
  commentId: M:ConcurrentSharp.TaskExtensions.TimeoutAfter``1(Task{``0},System.Int32,CancellationTokenSource)
  name.vb: TimeoutAfter(Of T)(Task(Of T), Int32, CancellationTokenSource)
  fullName: ConcurrentSharp.TaskExtensions.TimeoutAfter<T>(Task<T>, System.Int32, CancellationTokenSource)
  fullName.vb: ConcurrentSharp.TaskExtensions.TimeoutAfter(Of T)(Task(Of T), System.Int32, CancellationTokenSource)
  nameWithType: TaskExtensions.TimeoutAfter<T>(Task<T>, Int32, CancellationTokenSource)
  nameWithType.vb: TaskExtensions.TimeoutAfter(Of T)(Task(Of T), Int32, CancellationTokenSource)
- uid: ConcurrentSharp.TaskExtensions.TimeoutAfter``1(Task{``0},TimeSpan)
  name: TimeoutAfter<T>(Task<T>, TimeSpan)
  href: api/ConcurrentSharp.TaskExtensions.TimeoutAfter.html#ConcurrentSharp_TaskExtensions_TimeoutAfter__1_Task___0__TimeSpan_
  commentId: M:ConcurrentSharp.TaskExtensions.TimeoutAfter``1(Task{``0},TimeSpan)
  name.vb: TimeoutAfter(Of T)(Task(Of T), TimeSpan)
  fullName: ConcurrentSharp.TaskExtensions.TimeoutAfter<T>(Task<T>, TimeSpan)
  fullName.vb: ConcurrentSharp.TaskExtensions.TimeoutAfter(Of T)(Task(Of T), TimeSpan)
  nameWithType: TaskExtensions.TimeoutAfter<T>(Task<T>, TimeSpan)
  nameWithType.vb: TaskExtensions.TimeoutAfter(Of T)(Task(Of T), TimeSpan)
- uid: ConcurrentSharp.TaskExtensions.TimeoutAfter``1(Task{``0},TimeSpan,CancellationTokenSource)
  name: TimeoutAfter<T>(Task<T>, TimeSpan, CancellationTokenSource)
  href: api/ConcurrentSharp.TaskExtensions.TimeoutAfter.html#ConcurrentSharp_TaskExtensions_TimeoutAfter__1_Task___0__TimeSpan_CancellationTokenSource_
  commentId: M:ConcurrentSharp.TaskExtensions.TimeoutAfter``1(Task{``0},TimeSpan,CancellationTokenSource)
  name.vb: TimeoutAfter(Of T)(Task(Of T), TimeSpan, CancellationTokenSource)
  fullName: ConcurrentSharp.TaskExtensions.TimeoutAfter<T>(Task<T>, TimeSpan, CancellationTokenSource)
  fullName.vb: ConcurrentSharp.TaskExtensions.TimeoutAfter(Of T)(Task(Of T), TimeSpan, CancellationTokenSource)
  nameWithType: TaskExtensions.TimeoutAfter<T>(Task<T>, TimeSpan, CancellationTokenSource)
  nameWithType.vb: TaskExtensions.TimeoutAfter(Of T)(Task(Of T), TimeSpan, CancellationTokenSource)
- uid: ConcurrentSharp.TaskExtensions.WaitExceptionless(Task)
  name: WaitExceptionless(Task)
  href: api/ConcurrentSharp.TaskExtensions.WaitExceptionless.html#ConcurrentSharp_TaskExtensions_WaitExceptionless_Task_
  commentId: M:ConcurrentSharp.TaskExtensions.WaitExceptionless(Task)
  fullName: ConcurrentSharp.TaskExtensions.WaitExceptionless(Task)
  nameWithType: TaskExtensions.WaitExceptionless(Task)
- uid: ConcurrentSharp.TaskExtensions.WaitExceptionless(Task,CancellationToken)
  name: WaitExceptionless(Task, CancellationToken)
  href: api/ConcurrentSharp.TaskExtensions.WaitExceptionless.html#ConcurrentSharp_TaskExtensions_WaitExceptionless_Task_CancellationToken_
  commentId: M:ConcurrentSharp.TaskExtensions.WaitExceptionless(Task,CancellationToken)
  fullName: ConcurrentSharp.TaskExtensions.WaitExceptionless(Task, CancellationToken)
  nameWithType: TaskExtensions.WaitExceptionless(Task, CancellationToken)
- uid: ConcurrentSharp.TaskExtensions.WaitExceptionless*
  name: WaitExceptionless
  href: api/ConcurrentSharp.TaskExtensions.WaitExceptionless.html
  commentId: Overload:ConcurrentSharp.TaskExtensions.WaitExceptionless
  fullName: ConcurrentSharp.TaskExtensions.WaitExceptionless
  nameWithType: TaskExtensions.WaitExceptionless
- uid: ConcurrentSharp.TaskExtensions.WaitExceptionless``1(Task{``0})
  name: WaitExceptionless<T>(Task<T>)
  href: api/ConcurrentSharp.TaskExtensions.WaitExceptionless.html#ConcurrentSharp_TaskExtensions_WaitExceptionless__1_Task___0__
  commentId: M:ConcurrentSharp.TaskExtensions.WaitExceptionless``1(Task{``0})
  name.vb: WaitExceptionless(Of T)(Task(Of T))
  fullName: ConcurrentSharp.TaskExtensions.WaitExceptionless<T>(Task<T>)
  fullName.vb: ConcurrentSharp.TaskExtensions.WaitExceptionless(Of T)(Task(Of T))
  nameWithType: TaskExtensions.WaitExceptionless<T>(Task<T>)
  nameWithType.vb: TaskExtensions.WaitExceptionless(Of T)(Task(Of T))
- uid: ConcurrentSharp.TaskExtensions.WaitExceptionless``1(Task{``0},CancellationToken)
  name: WaitExceptionless<T>(Task<T>, CancellationToken)
  href: api/ConcurrentSharp.TaskExtensions.WaitExceptionless.html#ConcurrentSharp_TaskExtensions_WaitExceptionless__1_Task___0__CancellationToken_
  commentId: M:ConcurrentSharp.TaskExtensions.WaitExceptionless``1(Task{``0},CancellationToken)
  name.vb: WaitExceptionless(Of T)(Task(Of T), CancellationToken)
  fullName: ConcurrentSharp.TaskExtensions.WaitExceptionless<T>(Task<T>, CancellationToken)
  fullName.vb: ConcurrentSharp.TaskExtensions.WaitExceptionless(Of T)(Task(Of T), CancellationToken)
  nameWithType: TaskExtensions.WaitExceptionless<T>(Task<T>, CancellationToken)
  nameWithType.vb: TaskExtensions.WaitExceptionless(Of T)(Task(Of T), CancellationToken)
- uid: ConcurrentSharp.TaskFrom
  name: TaskFrom
  href: api/ConcurrentSharp.TaskFrom.html
  commentId: T:ConcurrentSharp.TaskFrom
  fullName: ConcurrentSharp.TaskFrom
  nameWithType: TaskFrom
- uid: ConcurrentSharp.TaskFrom.Event*
  name: Event
  href: api/ConcurrentSharp.TaskFrom.Event.html
  commentId: Overload:ConcurrentSharp.TaskFrom.Event
  fullName: ConcurrentSharp.TaskFrom.Event
  nameWithType: TaskFrom.Event
- uid: ConcurrentSharp.TaskFrom.Event``1(``0,System.String)
  name: Event<TSource>(TSource, String)
  href: api/ConcurrentSharp.TaskFrom.Event.html#ConcurrentSharp_TaskFrom_Event__1___0_System_String_
  commentId: M:ConcurrentSharp.TaskFrom.Event``1(``0,System.String)
  name.vb: Event(Of TSource)(TSource, String)
  fullName: ConcurrentSharp.TaskFrom.Event<TSource>(TSource, System.String)
  fullName.vb: ConcurrentSharp.TaskFrom.Event(Of TSource)(TSource, System.String)
  nameWithType: TaskFrom.Event<TSource>(TSource, String)
  nameWithType.vb: TaskFrom.Event(Of TSource)(TSource, String)
- uid: ConcurrentSharp.TaskFrom.Event``2(``0,System.String)
  name: Event<TSource, TEventArgs>(TSource, String)
  href: api/ConcurrentSharp.TaskFrom.Event.html#ConcurrentSharp_TaskFrom_Event__2___0_System_String_
  commentId: M:ConcurrentSharp.TaskFrom.Event``2(``0,System.String)
  name.vb: Event(Of TSource, TEventArgs)(TSource, String)
  fullName: ConcurrentSharp.TaskFrom.Event<TSource, TEventArgs>(TSource, System.String)
  fullName.vb: ConcurrentSharp.TaskFrom.Event(Of TSource, TEventArgs)(TSource, System.String)
  nameWithType: TaskFrom.Event<TSource, TEventArgs>(TSource, String)
  nameWithType.vb: TaskFrom.Event(Of TSource, TEventArgs)(TSource, String)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback*
  name: FromAsyncCallback
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html
  commentId: Overload:ConcurrentSharp.TaskFrom.FromAsyncCallback
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback
  nameWithType: TaskFrom.FromAsyncCallback
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``1(Func{``0,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0)
  name: FromAsyncCallback<T1>(Func<T1, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__1_Func___0_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``1(Func{``0,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0)
  name.vb: FromAsyncCallback(Of T1)(Func(Of T1, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1>(Func<T1, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1)(Func(Of T1, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1)
  nameWithType: TaskFrom.FromAsyncCallback<T1>(Func<T1, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1)(Func(Of T1, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``1(Func{AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``0})
  name: FromAsyncCallback<TReturn>(Func<AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__1_Func_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___0__
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``1(Func{AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``0})
  name.vb: FromAsyncCallback(Of TReturn)(Func(Of AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn))
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<TReturn>(Func<AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of TReturn)(Func(Of AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn))
  nameWithType: TaskFrom.FromAsyncCallback<TReturn>(Func<AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of TReturn)(Func(Of AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn))
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``10(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__10_Func___0___1___2___3___4___5___6___7___8___9_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0___1___2___3___4___5___6___7___8___9_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``10(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``10(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__10_Func___0___1___2___3___4___5___6___7___8_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___9____0___1___2___3___4___5___6___7___8_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``10(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``11(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__11_Func___0___1___2___3___4___5___6___7___8___9___10_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0___1___2___3___4___5___6___7___8___9___10_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``11(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``11(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__11_Func___0___1___2___3___4___5___6___7___8___9_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___10____0___1___2___3___4___5___6___7___8___9_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``11(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``12(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__12_Func___0___1___2___3___4___5___6___7___8___9___10___11_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0___1___2___3___4___5___6___7___8___9___10___11_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``12(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``12(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__12_Func___0___1___2___3___4___5___6___7___8___9___10_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___11____0___1___2___3___4___5___6___7___8___9___10_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``12(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``13(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__13_Func___0___1___2___3___4___5___6___7___8___9___10___11___12_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0___1___2___3___4___5___6___7___8___9___10___11___12_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``13(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``13(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__13_Func___0___1___2___3___4___5___6___7___8___9___10___11_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___12____0___1___2___3___4___5___6___7___8___9___10___11_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``13(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``14(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__14_Func___0___1___2___3___4___5___6___7___8___9___10___11___12___13_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0___1___2___3___4___5___6___7___8___9___10___11___12___13_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``14(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``14(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__14_Func___0___1___2___3___4___5___6___7___8___9___10___11___12_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___13____0___1___2___3___4___5___6___7___8___9___10___11___12_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``14(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``15(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__15_Func___0___1___2___3___4___5___6___7___8___9___10___11___12___13_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___14____0___1___2___3___4___5___6___7___8___9___10___11___12___13_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``15(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``2(Func{``0,``1,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1)
  name: FromAsyncCallback<T1, T2>(Func<T1, T2, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__2_Func___0___1_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0___1_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``2(Func{``0,``1,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1)
  name.vb: FromAsyncCallback(Of T1, T2)(Func(Of T1, T2, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2>(Func<T1, T2, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1, T2)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2)(Func(Of T1, T2, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1, T2)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2>(Func<T1, T2, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2)(Func(Of T1, T2, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``2(Func{``0,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``1},``0)
  name: FromAsyncCallback<T1, TReturn>(Func<T1, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__2_Func___0_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___1____0_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``2(Func{``0,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``1},``0)
  name.vb: FromAsyncCallback(Of T1, TReturn)(Func(Of T1, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, TReturn>(Func<T1, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, TReturn)(Func(Of T1, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1)
  nameWithType: TaskFrom.FromAsyncCallback<T1, TReturn>(Func<T1, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, TReturn)(Func(Of T1, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``3(Func{``0,``1,``2,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2)
  name: FromAsyncCallback<T1, T2, T3>(Func<T1, T2, T3, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__3_Func___0___1___2_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0___1___2_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``3(Func{``0,``1,``2,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2)
  name.vb: FromAsyncCallback(Of T1, T2, T3)(Func(Of T1, T2, T3, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3>(Func<T1, T2, T3, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3)(Func(Of T1, T2, T3, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3>(Func<T1, T2, T3, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3)(Func(Of T1, T2, T3, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``3(Func{``0,``1,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``2},``0,``1)
  name: FromAsyncCallback<T1, T2, TReturn>(Func<T1, T2, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__3_Func___0___1_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___2____0___1_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``3(Func{``0,``1,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``2},``0,``1)
  name.vb: FromAsyncCallback(Of T1, T2, TReturn)(Func(Of T1, T2, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, TReturn>(Func<T1, T2, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, TReturn)(Func(Of T1, T2, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, TReturn>(Func<T1, T2, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, TReturn)(Func(Of T1, T2, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``4(Func{``0,``1,``2,``3,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3)
  name: FromAsyncCallback<T1, T2, T3, T4>(Func<T1, T2, T3, T4, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__4_Func___0___1___2___3_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0___1___2___3_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``4(Func{``0,``1,``2,``3,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4)(Func(Of T1, T2, T3, T4, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4>(Func<T1, T2, T3, T4, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4)(Func(Of T1, T2, T3, T4, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4>(Func<T1, T2, T3, T4, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4)(Func(Of T1, T2, T3, T4, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``4(Func{``0,``1,``2,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``3},``0,``1,``2)
  name: FromAsyncCallback<T1, T2, T3, TReturn>(Func<T1, T2, T3, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__4_Func___0___1___2_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___3____0___1___2_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``4(Func{``0,``1,``2,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``3},``0,``1,``2)
  name.vb: FromAsyncCallback(Of T1, T2, T3, TReturn)(Func(Of T1, T2, T3, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, TReturn>(Func<T1, T2, T3, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, TReturn)(Func(Of T1, T2, T3, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, TReturn>(Func<T1, T2, T3, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, TReturn)(Func(Of T1, T2, T3, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``5(Func{``0,``1,``2,``3,``4,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4)
  name: FromAsyncCallback<T1, T2, T3, T4, T5>(Func<T1, T2, T3, T4, T5, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__5_Func___0___1___2___3___4_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0___1___2___3___4_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``5(Func{``0,``1,``2,``3,``4,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5)(Func(Of T1, T2, T3, T4, T5, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5>(Func<T1, T2, T3, T4, T5, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5)(Func(Of T1, T2, T3, T4, T5, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5>(Func<T1, T2, T3, T4, T5, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5)(Func(Of T1, T2, T3, T4, T5, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``5(Func{``0,``1,``2,``3,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``4},``0,``1,``2,``3)
  name: FromAsyncCallback<T1, T2, T3, T4, TReturn>(Func<T1, T2, T3, T4, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__5_Func___0___1___2___3_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___4____0___1___2___3_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``5(Func{``0,``1,``2,``3,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``4},``0,``1,``2,``3)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, TReturn)(Func(Of T1, T2, T3, T4, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, TReturn>(Func<T1, T2, T3, T4, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, TReturn)(Func(Of T1, T2, T3, T4, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, TReturn>(Func<T1, T2, T3, T4, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, TReturn)(Func(Of T1, T2, T3, T4, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``6(Func{``0,``1,``2,``3,``4,``5,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6>(Func<T1, T2, T3, T4, T5, T6, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__6_Func___0___1___2___3___4___5_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0___1___2___3___4___5_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``6(Func{``0,``1,``2,``3,``4,``5,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6)(Func(Of T1, T2, T3, T4, T5, T6, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6>(Func<T1, T2, T3, T4, T5, T6, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6)(Func(Of T1, T2, T3, T4, T5, T6, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6>(Func<T1, T2, T3, T4, T5, T6, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6)(Func(Of T1, T2, T3, T4, T5, T6, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``6(Func{``0,``1,``2,``3,``4,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``5},``0,``1,``2,``3,``4)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, TReturn>(Func<T1, T2, T3, T4, T5, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__6_Func___0___1___2___3___4_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___5____0___1___2___3___4_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``6(Func{``0,``1,``2,``3,``4,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``5},``0,``1,``2,``3,``4)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, TReturn)(Func(Of T1, T2, T3, T4, T5, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, TReturn>(Func<T1, T2, T3, T4, T5, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, TReturn)(Func(Of T1, T2, T3, T4, T5, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, TReturn>(Func<T1, T2, T3, T4, T5, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, TReturn)(Func(Of T1, T2, T3, T4, T5, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``7(Func{``0,``1,``2,``3,``4,``5,``6,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7>(Func<T1, T2, T3, T4, T5, T6, T7, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__7_Func___0___1___2___3___4___5___6_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0___1___2___3___4___5___6_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``7(Func{``0,``1,``2,``3,``4,``5,``6,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7)(Func(Of T1, T2, T3, T4, T5, T6, T7, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7>(Func<T1, T2, T3, T4, T5, T6, T7, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7)(Func(Of T1, T2, T3, T4, T5, T6, T7, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7>(Func<T1, T2, T3, T4, T5, T6, T7, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7)(Func(Of T1, T2, T3, T4, T5, T6, T7, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``7(Func{``0,``1,``2,``3,``4,``5,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``6},``0,``1,``2,``3,``4,``5)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, TReturn>(Func<T1, T2, T3, T4, T5, T6, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__7_Func___0___1___2___3___4___5_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___6____0___1___2___3___4___5_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``7(Func{``0,``1,``2,``3,``4,``5,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``6},``0,``1,``2,``3,``4,``5)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, TReturn>(Func<T1, T2, T3, T4, T5, T6, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, TReturn>(Func<T1, T2, T3, T4, T5, T6, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``8(Func{``0,``1,``2,``3,``4,``5,``6,``7,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8>(Func<T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__8_Func___0___1___2___3___4___5___6___7_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0___1___2___3___4___5___6___7_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``8(Func{``0,``1,``2,``3,``4,``5,``6,``7,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8>(Func<T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8>(Func<T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``8(Func{``0,``1,``2,``3,``4,``5,``6,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``7},``0,``1,``2,``3,``4,``5,``6)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__8_Func___0___1___2___3___4___5___6_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___7____0___1___2___3___4___5___6_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``8(Func{``0,``1,``2,``3,``4,``5,``6,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``7},``0,``1,``2,``3,``4,``5,``6)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``9(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7,``8)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__9_Func___0___1___2___3___4___5___6___7___8_AsyncCallback_System_Object_IAsyncResult__Action_IAsyncResult____0___1___2___3___4___5___6___7___8_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``9(Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,AsyncCallback,System.Object,IAsyncResult},Action{IAsyncResult},``0,``1,``2,``3,``4,``5,``6,``7,``8)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, System.Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, System.Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, T9>(Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, Object, IAsyncResult>, Action<IAsyncResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, T9)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, AsyncCallback, Object, IAsyncResult), Action(Of IAsyncResult), T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: ConcurrentSharp.TaskFrom.FromAsyncCallback``9(Func{``0,``1,``2,``3,``4,``5,``6,``7,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``8},``0,``1,``2,``3,``4,``5,``6,``7)
  name: FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/ConcurrentSharp.TaskFrom.FromAsyncCallback.html#ConcurrentSharp_TaskFrom_FromAsyncCallback__9_Func___0___1___2___3___4___5___6___7_AsyncCallback_System_Object_IAsyncResult__Func_IAsyncResult___8____0___1___2___3___4___5___6___7_
  commentId: M:ConcurrentSharp.TaskFrom.FromAsyncCallback``9(Func{``0,``1,``2,``3,``4,``5,``6,``7,AsyncCallback,System.Object,IAsyncResult},Func{IAsyncResult,``8},``0,``1,``2,``3,``4,``5,``6,``7)
  name.vb: FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8)
  fullName: ConcurrentSharp.TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, System.Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: ConcurrentSharp.TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, System.Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: TaskFrom.FromAsyncCallback<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>(Func<T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, Object, IAsyncResult>, Func<IAsyncResult, TReturn>, T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: TaskFrom.FromAsyncCallback(Of T1, T2, T3, T4, T5, T6, T7, T8, TReturn)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, Object, IAsyncResult), Func(Of IAsyncResult, TReturn), T1, T2, T3, T4, T5, T6, T7, T8)
- uid: ConcurrentSharp.Throttle
  name: Throttle
  href: api/ConcurrentSharp.Throttle.html
  commentId: T:ConcurrentSharp.Throttle
  fullName: ConcurrentSharp.Throttle
  nameWithType: Throttle
- uid: ConcurrentSharp.Throttle.#ctor(System.Int32)
  name: Throttle(Int32)
  href: api/ConcurrentSharp.Throttle.-ctor.html#ConcurrentSharp_Throttle__ctor_System_Int32_
  commentId: M:ConcurrentSharp.Throttle.#ctor(System.Int32)
  fullName: ConcurrentSharp.Throttle.Throttle(System.Int32)
  nameWithType: Throttle.Throttle(Int32)
- uid: ConcurrentSharp.Throttle.#ctor*
  name: Throttle
  href: api/ConcurrentSharp.Throttle.-ctor.html
  commentId: Overload:ConcurrentSharp.Throttle.#ctor
  fullName: ConcurrentSharp.Throttle.Throttle
  nameWithType: Throttle.Throttle
- uid: ConcurrentSharp.Throttle.Dispose
  name: Dispose()
  href: api/ConcurrentSharp.Throttle.Dispose.html#ConcurrentSharp_Throttle_Dispose
  commentId: M:ConcurrentSharp.Throttle.Dispose
  fullName: ConcurrentSharp.Throttle.Dispose()
  nameWithType: Throttle.Dispose()
- uid: ConcurrentSharp.Throttle.Dispose*
  name: Dispose
  href: api/ConcurrentSharp.Throttle.Dispose.html
  commentId: Overload:ConcurrentSharp.Throttle.Dispose
  fullName: ConcurrentSharp.Throttle.Dispose
  nameWithType: Throttle.Dispose
- uid: ConcurrentSharp.Throttle.Enter
  name: Enter()
  href: api/ConcurrentSharp.Throttle.Enter.html#ConcurrentSharp_Throttle_Enter
  commentId: M:ConcurrentSharp.Throttle.Enter
  fullName: ConcurrentSharp.Throttle.Enter()
  nameWithType: Throttle.Enter()
- uid: ConcurrentSharp.Throttle.Enter*
  name: Enter
  href: api/ConcurrentSharp.Throttle.Enter.html
  commentId: Overload:ConcurrentSharp.Throttle.Enter
  fullName: ConcurrentSharp.Throttle.Enter
  nameWithType: Throttle.Enter
- uid: ConcurrentSharp.Throttle.Execute(Action)
  name: Execute(Action)
  href: api/ConcurrentSharp.Throttle.Execute.html#ConcurrentSharp_Throttle_Execute_Action_
  commentId: M:ConcurrentSharp.Throttle.Execute(Action)
  fullName: ConcurrentSharp.Throttle.Execute(Action)
  nameWithType: Throttle.Execute(Action)
- uid: ConcurrentSharp.Throttle.Execute*
  name: Execute
  href: api/ConcurrentSharp.Throttle.Execute.html
  commentId: Overload:ConcurrentSharp.Throttle.Execute
  fullName: ConcurrentSharp.Throttle.Execute
  nameWithType: Throttle.Execute
- uid: ConcurrentSharp.Throttle.Execute``1(Action{``0},``0)
  name: Execute<T>(Action<T>, T)
  href: api/ConcurrentSharp.Throttle.Execute.html#ConcurrentSharp_Throttle_Execute__1_Action___0____0_
  commentId: M:ConcurrentSharp.Throttle.Execute``1(Action{``0},``0)
  name.vb: Execute(Of T)(Action(Of T), T)
  fullName: ConcurrentSharp.Throttle.Execute<T>(Action<T>, T)
  fullName.vb: ConcurrentSharp.Throttle.Execute(Of T)(Action(Of T), T)
  nameWithType: Throttle.Execute<T>(Action<T>, T)
  nameWithType.vb: Throttle.Execute(Of T)(Action(Of T), T)
- uid: ConcurrentSharp.Throttle.Execute``1(Func{``0})
  name: Execute<TResult>(Func<TResult>)
  href: api/ConcurrentSharp.Throttle.Execute.html#ConcurrentSharp_Throttle_Execute__1_Func___0__
  commentId: M:ConcurrentSharp.Throttle.Execute``1(Func{``0})
  name.vb: Execute(Of TResult)(Func(Of TResult))
  fullName: ConcurrentSharp.Throttle.Execute<TResult>(Func<TResult>)
  fullName.vb: ConcurrentSharp.Throttle.Execute(Of TResult)(Func(Of TResult))
  nameWithType: Throttle.Execute<TResult>(Func<TResult>)
  nameWithType.vb: Throttle.Execute(Of TResult)(Func(Of TResult))
- uid: ConcurrentSharp.Throttle.Execute``2(Func{``0,``1},``0)
  name: Execute<T, TResult>(Func<T, TResult>, T)
  href: api/ConcurrentSharp.Throttle.Execute.html#ConcurrentSharp_Throttle_Execute__2_Func___0___1____0_
  commentId: M:ConcurrentSharp.Throttle.Execute``2(Func{``0,``1},``0)
  name.vb: Execute(Of T, TResult)(Func(Of T, TResult), T)
  fullName: ConcurrentSharp.Throttle.Execute<T, TResult>(Func<T, TResult>, T)
  fullName.vb: ConcurrentSharp.Throttle.Execute(Of T, TResult)(Func(Of T, TResult), T)
  nameWithType: Throttle.Execute<T, TResult>(Func<T, TResult>, T)
  nameWithType.vb: Throttle.Execute(Of T, TResult)(Func(Of T, TResult), T)
- uid: ConcurrentSharp.Throttle.ExecuteAllAsync*
  name: ExecuteAllAsync
  href: api/ConcurrentSharp.Throttle.ExecuteAllAsync.html
  commentId: Overload:ConcurrentSharp.Throttle.ExecuteAllAsync
  fullName: ConcurrentSharp.Throttle.ExecuteAllAsync
  nameWithType: Throttle.ExecuteAllAsync
- uid: ConcurrentSharp.Throttle.ExecuteAllAsync``1(IEnumerable{``0},Func{``0,Task})
  name: ExecuteAllAsync<T>(IEnumerable<T>, Func<T, Task>)
  href: api/ConcurrentSharp.Throttle.ExecuteAllAsync.html#ConcurrentSharp_Throttle_ExecuteAllAsync__1_IEnumerable___0__Func___0_Task__
  commentId: M:ConcurrentSharp.Throttle.ExecuteAllAsync``1(IEnumerable{``0},Func{``0,Task})
  name.vb: ExecuteAllAsync(Of T)(IEnumerable(Of T), Func(Of T, Task))
  fullName: ConcurrentSharp.Throttle.ExecuteAllAsync<T>(IEnumerable<T>, Func<T, Task>)
  fullName.vb: ConcurrentSharp.Throttle.ExecuteAllAsync(Of T)(IEnumerable(Of T), Func(Of T, Task))
  nameWithType: Throttle.ExecuteAllAsync<T>(IEnumerable<T>, Func<T, Task>)
  nameWithType.vb: Throttle.ExecuteAllAsync(Of T)(IEnumerable(Of T), Func(Of T, Task))
- uid: ConcurrentSharp.Throttle.ExecuteAllAsync``2(IEnumerable{``0},Func{``0,Task{``1}})
  name: ExecuteAllAsync<TArg, TResult>(IEnumerable<TArg>, Func<TArg, Task<TResult>>)
  href: api/ConcurrentSharp.Throttle.ExecuteAllAsync.html#ConcurrentSharp_Throttle_ExecuteAllAsync__2_IEnumerable___0__Func___0_Task___1___
  commentId: M:ConcurrentSharp.Throttle.ExecuteAllAsync``2(IEnumerable{``0},Func{``0,Task{``1}})
  name.vb: ExecuteAllAsync(Of TArg, TResult)(IEnumerable(Of TArg), Func(Of TArg, Task(Of TResult)))
  fullName: ConcurrentSharp.Throttle.ExecuteAllAsync<TArg, TResult>(IEnumerable<TArg>, Func<TArg, Task<TResult>>)
  fullName.vb: ConcurrentSharp.Throttle.ExecuteAllAsync(Of TArg, TResult)(IEnumerable(Of TArg), Func(Of TArg, Task(Of TResult)))
  nameWithType: Throttle.ExecuteAllAsync<TArg, TResult>(IEnumerable<TArg>, Func<TArg, Task<TResult>>)
  nameWithType.vb: Throttle.ExecuteAllAsync(Of TArg, TResult)(IEnumerable(Of TArg), Func(Of TArg, Task(Of TResult)))
- uid: ConcurrentSharp.ThrottleToken
  name: ThrottleToken
  href: api/ConcurrentSharp.ThrottleToken.html
  commentId: T:ConcurrentSharp.ThrottleToken
  fullName: ConcurrentSharp.ThrottleToken
  nameWithType: ThrottleToken
- uid: ConcurrentSharp.ThrottleToken.Dispose
  name: Dispose()
  href: api/ConcurrentSharp.ThrottleToken.Dispose.html#ConcurrentSharp_ThrottleToken_Dispose
  commentId: M:ConcurrentSharp.ThrottleToken.Dispose
  fullName: ConcurrentSharp.ThrottleToken.Dispose()
  nameWithType: ThrottleToken.Dispose()
- uid: ConcurrentSharp.ThrottleToken.Dispose*
  name: Dispose
  href: api/ConcurrentSharp.ThrottleToken.Dispose.html
  commentId: Overload:ConcurrentSharp.ThrottleToken.Dispose
  fullName: ConcurrentSharp.ThrottleToken.Dispose
  nameWithType: ThrottleToken.Dispose
